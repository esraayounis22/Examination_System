{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./components/navbar/navbar.component\";\nexport class AppComponent {\n  constructor() {\n    this.title = 'Examination';\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 2,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-navbar\")(1, \"router-outlet\");\n    }\n  },\n  dependencies: [i1.RouterOutlet, i2.NavbarComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,YAAY;EALzBC;IAOE,UAAK,GAAG,aAAa;;;AAFVD,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAE;EAAAC;EAAAC;EAAAC;IAAA;MCRzBC,6BAAyB","names":["AppComponent","constructor","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["D:\\projects\\Exams-Website-Angular-Project-master\\src\\app\\app.component.ts","D:\\projects\\Exams-Website-Angular-Project-master\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { QuestionService } from './services/question.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'Examination';\n\n\n  // questions: any[] = [];\n  // currentQuestionIndex = 0;\n  // score = 0;\n  // pageSize = 5;\n  // currentPage = 1;\n\n\n  // config = {\n  //   itemsPerPage: 1,\n  //   currentPage: 1,\n  //   totalItems: this.questions ? this.questions.length : 0\n  // };\n\n\n  // constructor(private _questionservice: QuestionService) { }\n\n\n  // ngOnInit() {\n  //   this.getQuestions();\n\n  // }\n  // getQuestions() {\n  //   this._questionservice.getQuestions().subscribe(data => {\n  //     console.log(data);\n  //     this.questions = data.History.questions.concat(data.Science.questions);\n  //     console.log(this.questions)\n  //   });\n  // }\n\n\n  // checkAnswer(option: any) {\n  //   const questionIndex = (this.config.currentPage - 1) * this.config.itemsPerPage;\n  //   const currentQuestion = this.questions[questionIndex];\n\n  //   if (!currentQuestion.answered) {\n  //     console.log(\"yesssssssss\");\n  //     if (option === currentQuestion.answer) {\n  //       this.score++;\n  //     }\n  //     currentQuestion.answered = true;\n  //   } else {\n  //   }\n  // }\n\n  // nextQuestion() {\n  //   if (this.currentQuestionIndex < this.questions.length - 1) {\n  //     this.currentQuestionIndex += this.pageSize;\n  //     this.currentPage++;\n  //   }\n  // }\n\n\n  // previousPage() {\n  //   if (this.config.currentPage > 1) {\n  //     this.config.currentPage--;\n  //   }\n  // }\n\n  // nextPage() {\n  //   if (this.config.currentPage < Math.ceil(this.questions.length / this.config.itemsPerPage)) {\n  //     this.config.currentPage++;\n  //   }\n  // }\n  // isLastPage() {\n  //   return this.config.currentPage === Math.ceil(this.questions.length / this.config.itemsPerPage);\n  // }\n  // isFirstPage() {\n  //   return this.config.currentPage === 1;\n  // }\n\n}\n","<app-navbar></app-navbar>\n\n<router-outlet></router-outlet>\n\n<!--\n<div class=\"text-center\" *ngIf=\"questions\">\n  <h3>{{ questions[(config.currentPage - 1) * config.itemsPerPage].question }}</h3>\n\n  <ul style=\" list-style-type: none; border: 1px solid #ccc;\n  padding: 10px;\" class=\"\">\n      <li style=\" background-color: #f5f5f5;\n      padding: 10px;\n      border: 1px solid #ccc;\" class=\"text-center m-2\"\n          *ngFor=\"let option of questions[(config.currentPage -1) * config.itemsPerPage].options\">\n          <button class=\"btn btn-secondary\" (click)=\"checkAnswer(option)\">{{ option }}</button>\n      </li>\n  </ul>\n\n  <p>Your score: {{ score }}</p>\n  <button class=\"btn btn-success m-2\" (click)=\"nextPage()\" [disabled]=\"isLastPage()\">Next</button>\n  <button class=\"btn btn-danger\" (click)=\"previousPage()\" [disabled]=\"isFirstPage()\">Previous</button>\n</div> -->\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}