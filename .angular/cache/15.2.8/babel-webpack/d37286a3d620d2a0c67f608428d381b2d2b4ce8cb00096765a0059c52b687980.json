{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/users.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(_usersService, _router) {\n    this._usersService = _usersService;\n    this._router = _router;\n  }\n  canActivate(next, state) {\n    let isLoggedIn = this._usersService.isLoggedin;\n    if (isLoggedIn) {\n      return true;\n    } else {\n      alert(\"Can't access!!\");\n      this._router.navigate(['/Login']);\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.UsersService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,aAA2B,EAAUC,OAAe;IAApD,kBAAa,GAAbD,aAAa;IAAwB,YAAO,GAAPC,OAAO;EAAW;EAE3EC,WAAW,CACTC,IAA4B,EAC5BC,KAA0B;IAC1B,IAAIC,UAAU,GAAG,IAAI,CAACL,aAAa,CAACM,UAAU;IAC9C,IAAID,UAAU,EAAE;MACd,OAAO,IAAI;KACZ,MAAM;MACLE,KAAK,CAAC,gBAAgB,CAAC;MACvB,IAAI,CAACN,OAAO,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MACjC,OAAO,KAAK;;EAEhB;;AAfWV,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAW,SAATX,SAAS;EAAAY,YAFR;AAAM","names":["AuthGuard","constructor","_usersService","_router","canActivate","next","state","isLoggedIn","isLoggedin","alert","navigate","factory","providedIn"],"sourceRoot":"","sources":["D:\\projects\\Exams-Website-Angular-Project-master\\src\\app\\Gards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UsersService } from '../services/users.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private _usersService: UsersService, private _router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    let isLoggedIn = this._usersService.isLoggedin;\n    if (isLoggedIn) {\n      return true;\n    } else {\n      alert(\"Can't access!!\");\n      this._router.navigate(['/Login']);\n      return false;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}