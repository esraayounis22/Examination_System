{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/question.service\";\nimport * as i2 from \"src/app/services/users.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"ngx-pagination\";\nfunction ExamComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"input\", 7);\n    i0.ɵɵlistener(\"change\", function ExamComponent_div_3_Template_input_change_3_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const question_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.changeScore($event, question_r2.num));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"label\", 8);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"br\");\n    i0.ɵɵelementStart(7, \"input\", 9);\n    i0.ɵɵlistener(\"change\", function ExamComponent_div_3_Template_input_change_7_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const question_r2 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.changeScore($event, question_r2.num));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"label\", 10);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"br\");\n    i0.ɵɵelementStart(11, \"input\", 11);\n    i0.ɵɵlistener(\"change\", function ExamComponent_div_3_Template_input_change_11_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const question_r2 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.changeScore($event, question_r2.num));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"label\", 12);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r2.question);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", question_r2.options[0]);\n    i0.ɵɵproperty(\"checked\", ctx_r0.checkForLastAnswers == 1 ? true : false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r2.options[0]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"value\", question_r2.options[1]);\n    i0.ɵɵproperty(\"checked\", ctx_r0.checkForLastAnswers == 2 ? true : false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r2.options[1]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"value\", question_r2.options[2]);\n    i0.ɵɵproperty(\"checked\", ctx_r0.checkForLastAnswers == 3 ? true : false);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(question_r2.options[2]);\n  }\n}\nfunction ExamComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ExamComponent_div_5_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.GetScore());\n    });\n    i0.ɵɵtext(2, \"Submit\");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = function (a1, a2) {\n  return {\n    itemsPerPage: 1,\n    currentPage: a1,\n    totalItems: a2\n  };\n};\nexport class ExamComponent {\n  constructor(_questionService, _usersService, _activatedRoute, _router) {\n    this._questionService = _questionService;\n    this._usersService = _usersService;\n    this._activatedRoute = _activatedRoute;\n    this._router = _router;\n    this.ExamData = {};\n    this.flag = false;\n    this.answerString = '';\n    this.addedOnce = false;\n    this.score = 0;\n    this.checkForLastAnswers = 0;\n    this.answers = [];\n    this.allquestions = 5;\n    this.pagination = 1;\n    this.result = [];\n    this.numOfAns = 0;\n    this.std = {};\n    this.UserId = localStorage.getItem(\"Token\");\n    this.ExamId = _activatedRoute.snapshot.paramMap.get(\"id\");\n  }\n  ngOnInit() {\n    this.getExamData();\n  }\n  getExamData() {\n    this._questionService.getQuestions(this.ExamId).subscribe({\n      next: res => {\n        this.ExamData = res;\n        this.fetchNext();\n      }\n    });\n  }\n  fetchNext() {\n    this.questions = this.ExamData?.questions;\n  }\n  renderPage(event) {\n    this.pagination = event;\n    //For submit button\n    if (event == 5) {\n      this.flag = true;\n    } else {\n      this.flag = false;\n    }\n    //get from array to put previous answers\n    this.result = this.answers.filter(n => n.numOfQuest == event);\n    this.checkForLastAnswers = this.result[0]?.numOfans;\n  }\n  changeScore(event, questID) {\n    // console.log(event)\n    this.answerString = event.target.defaultValue;\n    if (this.answerString == this.questions[this.pagination - 1].answer) {\n      this.score = this.score + 10;\n      this.addedOnce = true;\n    } else {\n      if (this.addedOnce) {\n        this.score = this.score - 10;\n        this.addedOnce = false;\n      }\n    }\n    this.numOfAns = event.target.attributes.id.value;\n    this.answers[questID] = {\n      numOfQuest: questID,\n      numOfans: this.numOfAns,\n      ans: this.answerString\n    };\n    console.log(this.answers[questID]);\n  }\n  GetScore() {\n    console.log(this.UserId);\n    this._usersService.getUserById(this.UserId).subscribe({\n      next: res => {\n        this.std = res;\n        this.std.exam_name = this.ExamData.exam_name;\n        this.std.grade = this.score.toString();\n        this.setStudentData();\n      },\n      error: err => console.log(\"error when loading student data\")\n    });\n  }\n  setStudentData() {\n    this._questionService.setSutdentScore(`${this.UserId}`, this.std).subscribe({\n      next: res => {\n        console.log(res);\n        this._router.navigate([\"/Grade\"]);\n      }\n    });\n  }\n}\nExamComponent.ɵfac = function ExamComponent_Factory(t) {\n  return new (t || ExamComponent)(i0.ɵɵdirectiveInject(i1.QuestionService), i0.ɵɵdirectiveInject(i2.UsersService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n};\nExamComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ExamComponent,\n  selectors: [[\"app-exam\"]],\n  decls: 8,\n  vars: 9,\n  consts: [[1, \"container\", \"mt-5\"], [1, \"mb-5\", \"text-center\"], [\"class\", \"pag\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \" d-flex justify-content-end\", 4, \"ngIf\"], [1, \"d-flex\", \"justify-content-center\"], [3, \"pageChange\"], [1, \"pag\"], [\"type\", \"radio\", \"id\", \"1\", \"name\", \"answer\", 3, \"value\", \"checked\", \"change\"], [\"for\", \"q1\", 1, \"ms-2\"], [\"type\", \"radio\", \"id\", \"2\", \"name\", \"answer\", 3, \"value\", \"checked\", \"change\"], [\"for\", \"q2\", 1, \"ms-2\"], [\"type\", \"radio\", \"id\", \"3\", \"name\", \"answer\", 3, \"value\", \"checked\", \"change\"], [\"for\", \"q3\", 1, \"ms-2\"], [1, \"d-flex\", \"justify-content-end\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function ExamComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, ExamComponent_div_3_Template, 15, 10, \"div\", 2);\n      i0.ɵɵpipe(4, \"paginate\");\n      i0.ɵɵtemplate(5, ExamComponent_div_5_Template, 3, 0, \"div\", 3);\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"pagination-controls\", 5);\n      i0.ɵɵlistener(\"pageChange\", function ExamComponent_Template_pagination_controls_pageChange_7_listener($event) {\n        return ctx.renderPage($event);\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"\", ctx.ExamData.exam_name, \" Exam :\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(4, 3, ctx.questions, i0.ɵɵpureFunction2(6, _c0, ctx.pagination, ctx.allquestions)));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.flag);\n    }\n  },\n  dependencies: [i4.NgForOf, i4.NgIf, i5.PaginationControlsComponent, i5.PaginatePipe],\n  styles: [\".pag[_ngcontent-%COMP%]{\\n  margin-bottom: 10%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9leGFtL2V4YW0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtBQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIi5wYWd7XG4gIG1hcmdpbi1ib3R0b206IDEwJTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ExamComponent","constructor","_questionService","_usersService","_activatedRoute","_router","UserId","localStorage","getItem","ExamId","snapshot","paramMap","get","ngOnInit","getExamData","getQuestions","subscribe","next","res","ExamData","fetchNext","questions","renderPage","event","pagination","flag","result","answers","filter","n","numOfQuest","checkForLastAnswers","numOfans","changeScore","questID","answerString","target","defaultValue","answer","score","addedOnce","numOfAns","attributes","id","value","ans","console","log","GetScore","getUserById","std","exam_name","grade","toString","setStudentData","error","err","setSutdentScore","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\projects\\Exams-Website-Angular-Project-master\\src\\app\\components\\exam\\exam.component.html","D:\\projects\\Exams-Website-Angular-Project-master\\src\\app\\components\\exam\\exam.component.ts"],"sourcesContent":["<div class=\"container mt-5\">\n  <h2 class=\"mb-5 text-center\">{{ExamData.exam_name}} Exam :</h2>\n  <div class=\"pag\" *ngFor=\"let question of questions | paginate: {\n            itemsPerPage:1,\n            currentPage: pagination,\n            totalItems: allquestions\n          }\">\n\n          <h3>{{question.question}}</h3>\n          <input\n          type=\"radio\"\n          id=\"1\"\n          name=\"answer\"\n          value=\"{{question.options[0]}}\"\n          (change)=\"changeScore($event,question.num)\"\n          [checked]=\"checkForLastAnswers ==1 ? true:false\">\n          <label class=\"ms-2\" for=\"q1\">{{question.options[0]}}</label><br>\n\n          <input\n          type=\"radio\"\n          id=\"2\"\n          name=\"answer\"\n          value=\"{{question.options[1]}}\"\n          (change)=\"changeScore($event,question.num)\"\n          [checked]=\"checkForLastAnswers ==2 ? true:false\">\n          <label class=\"ms-2\" for=\"q2\">{{question.options[1]}}</label><br>\n          <input\n          type=\"radio\"\n          id=\"3\"\n          name=\"answer\"\n          value=\"{{question.options[2]}}\"\n          (change)=\"changeScore($event,question.num)\"\n          [checked]=\"checkForLastAnswers ==3 ? true:false\">\n          <label class=\"ms-2\" for=\"q3\">{{question.options[2]}}</label><br>\n\n\n\n  </div>\n  <div *ngIf=\"flag\" class=\" d-flex justify-content-end\">\n    <button  class=\"btn btn-primary\" (click)=\"GetScore()\">Submit</button>\n  </div>\n  <div class=\"d-flex justify-content-center \">\n    <pagination-controls\n      (pageChange)=\"renderPage($event)\"\n    ></pagination-controls>\n  </div>\n</div>\n","import { Student } from '../../Interfaces/student';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ExamData } from 'src/app/Interfaces/exam-data';\nimport { QuestionService } from 'src/app/services/question.service';\nimport { Answers } from 'src/app/Interfaces/answers';\nimport { UsersService } from 'src/app/services/users.service';\n\n@Component({\n  selector: 'app-exam',\n  templateUrl: './exam.component.html',\n  styleUrls: ['./exam.component.css']\n\n\n})\nexport class ExamComponent implements OnInit{\n  UserId:(string|null);\n\n  ExamId:any;\n  ExamData:ExamData ={} as ExamData;\n\n  flag:boolean=false;\n  answerString:string='';\n  addedOnce:boolean=false;\n  score:number=0;\n\n  checkForLastAnswers:number=0\n\n  answers:Answers[]=[]\n\n  constructor(private _questionService:QuestionService,\n    private _usersService:UsersService,\n    private _activatedRoute:ActivatedRoute,\n    private _router:Router)\n  {\n    this.UserId = localStorage.getItem(\"Token\")\n\n    this.ExamId = _activatedRoute.snapshot.paramMap.get(\"id\");\n  }\n  ngOnInit(): void {\n    this.getExamData();\n\n  }\n\ngetExamData():void\n{\n  this._questionService.getQuestions(this.ExamId)\n  .subscribe({\n    next:res => {\n      this.ExamData=res;\n      this.fetchNext();}\n  });\n}\n\n  questions: any;\n  allquestions: number = 5;\n  pagination: number = 1;\n\n\n  fetchNext() {\n    this.questions = this.ExamData?.questions\n  }\n\n  result:Answers[]=[];\n\n  renderPage(event: number) {\n    this.pagination = event;\n\n    //For submit button\n    if(event == 5){this.flag =true}\n    else{this.flag =false}\n\n\n    //get from array to put previous answers\n    this.result= this.answers.filter(n => n.numOfQuest == event)\n    this.checkForLastAnswers = this.result[0]?.numOfans\n\n  }\n\n\n  numOfAns:number=0;\n\n  changeScore(event:any,questID:number)\n  {\n    // console.log(event)\n\n    this.answerString = event.target.defaultValue;\n\n    if(this.answerString == this.questions[this.pagination-1].answer)\n    {\n      this.score = this.score+10;\n      this.addedOnce=true\n    }\n    else\n    {\n      if(this.addedOnce)\n      {\n        this.score=this.score-10;\n        this.addedOnce=false\n      }\n    }\n\n    this.numOfAns=event.target.attributes.id.value\n    this.answers[questID]={numOfQuest:questID,numOfans:this.numOfAns,ans:this.answerString}\n    console.log( this.answers[questID])\n  }\n\n\n  std:Student={} as Student\n  GetScore()\n  {\n    console.log(this.UserId)\n    this._usersService.getUserById(this.UserId).subscribe({\n      next:res=>{\n        this.std=res;\n        this.std.exam_name=this.ExamData.exam_name;\n        this.std.grade=this.score.toString();\n        this.setStudentData();\n      },\n      error:err=>console.log(\"error when loading student data\")\n    })\n\n\n  }\n\n  setStudentData()\n  {\n    this._questionService.setSutdentScore(`${this.UserId}`,this.std).subscribe({\n      next:res=>{\n        console.log(res);\n        this._router.navigate([\"/Grade\"])\n      }\n    })\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}