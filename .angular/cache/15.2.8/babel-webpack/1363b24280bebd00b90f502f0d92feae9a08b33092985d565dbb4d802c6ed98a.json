{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UsersService {\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n    this.url = 'http://localhost:3005/Users';\n    this.UserId = new BehaviorSubject(null);\n  }\n  getAllUsers() {\n    return this._httpClient.get(this.url);\n  }\n  getUserById(userId) {\n    return this._httpClient.get(`${this.url}/${userId}`);\n  }\n  addUser(user) {\n    return this._httpClient.post(this.url, user);\n  }\n  login(userName, password) {\n    this.currentUser = {\n      userName: userName,\n      password: password\n    };\n    let id;\n    this.UserId?.subscribe({\n      next: res => id = res\n    });\n    localStorage.setItem(\"Token\", `${id}`);\n  }\n  get isLoggedin() {\n    if (this.currentUser?.userName && this.currentUser.password) return true;\n    return false;\n  }\n  logout() {\n    this.currentUser = undefined;\n    localStorage.removeItem(\"Token\");\n  }\n}\nUsersService.ɵfac = function UsersService_Factory(t) {\n  return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient));\n};\nUsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsersService,\n  factory: UsersService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAASA,eAAe,QAAoB,MAAM;;;AASlD,OAAM,MAAOC,YAAY;EAKvBC,YAAoBC,WAAuB;IAAvB,gBAAW,GAAXA,WAAW;IAH/B,QAAG,GAAW,6BAA6B;IAE3C,WAAM,GAAwB,IAAIH,eAAe,CAAC,IAAI,CAAC;EAEtD;EAEDI,WAAW;IACT,OAAO,IAAI,CAACD,WAAW,CAACE,GAAG,CAAM,IAAI,CAACC,GAAG,CAAC;EAC5C;EAEAC,WAAW,CAACC,MAAW;IAErB,OAAO,IAAI,CAACL,WAAW,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,GAAG,IAAIE,MAAM,EAAE,CAAC;EACtD;EAEAC,OAAO,CAACC,IAAS;IACf,OAAO,IAAI,CAACP,WAAW,CAACQ,IAAI,CAAC,IAAI,CAACL,GAAG,EAAEI,IAAI,CAAC;EAC9C;EAEAE,KAAK,CAACC,QAAgB,EAAEC,QAAgB;IACtC,IAAI,CAACC,WAAW,GAAG;MACjBF,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA;KACX;IACD,IAAIE,EAAE;IACN,IAAI,CAACC,MAAM,EAAEC,SAAS,CAAC;MAACC,IAAI,EAACC,GAAG,IAAEJ,EAAE,GAACI;IAAG,CAAC,CAAC;IAC1CC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAC,GAAGN,EAAE,EAAE,CAAC;EACvC;EAEA,IAAIO,UAAU;IACZ,IAAI,IAAI,CAACR,WAAW,EAAEF,QAAQ,IAAI,IAAI,CAACE,WAAW,CAACD,QAAQ,EAAE,OAAO,IAAI;IACxE,OAAO,KAAK;EACd;EAEAU,MAAM;IACJ,IAAI,CAACT,WAAW,GAAGU,SAAS;IAC5BJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;EAClC;;AAvCWzB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAA0B,SAAZ1B,YAAY;EAAA2B,YAFX;AAAM","names":["BehaviorSubject","UsersService","constructor","_httpClient","getAllUsers","get","url","getUserById","userId","addUser","user","post","login","userName","password","currentUser","id","UserId","subscribe","next","res","localStorage","setItem","isLoggedin","logout","undefined","removeItem","factory","providedIn"],"sourceRoot":"","sources":["D:\\projects\\Exams-Website-Angular-Project-master\\src\\app\\services\\users.service.ts"],"sourcesContent":["import { BehaviorSubject, Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Student } from '../Interfaces/student';\nimport { IUser } from '../Interfaces/iuser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  url: string = 'http://localhost:3005/Users';\n  currentUser: IUser | undefined;\n  UserId:BehaviorSubject<any> = new BehaviorSubject(null);\n  constructor(private _httpClient: HttpClient)\n  {}\n\n  getAllUsers() {\n    return this._httpClient.get<any>(this.url);\n  }\n\n  getUserById(userId: any):Observable<any>\n  {\n    return this._httpClient.get(`${this.url}/${userId}`);\n  }\n\n  addUser(user: any) {\n    return this._httpClient.post(this.url, user);\n  }\n\n  login(userName: string, password: string) {\n    this.currentUser = {\n      userName: userName,\n      password: password,\n    };\n    let id ;\n    this.UserId?.subscribe({next:res=>id=res})\n    localStorage.setItem(\"Token\",`${id}`);\n  }\n\n  get isLoggedin(): boolean {\n    if (this.currentUser?.userName && this.currentUser.password) return true;\n    return false;\n  }\n\n  logout() {\n    this.currentUser = undefined;\n    localStorage.removeItem(\"Token\");\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}